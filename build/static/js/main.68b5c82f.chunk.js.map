{"version":3,"sources":["Components/Header/index.tsx","Views/Home/index.tsx","utils/index.tsx","Views/Qrcode/index.tsx","Views/JSON/index.tsx","Components/Transfer/index.tsx","Views/System/index.tsx","Views/LifeTime/LifeTime.ts","Views/LifeTime/index.tsx","Components/Transfer/Transfer.ts","Views/Transfer/index.tsx","Views/ChatRoom/initSocket.tsx","Views/ChatRoom/useMessages.ts","Components/RichText/index.tsx","Views/ChatRoom/Control.tsx","Views/ChatRoom/MessageBox.tsx","Views/ChatRoom/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Header","useState","isShow","setIsShow","useEffect","console","log","document","body","onclick","className","to","src","alt","onClick","e","stopPropagation","Home","name","des","image","url","map","item","key","debounce","func","timer","ms","args","clearTimeout","setTimeout","apply","makeQrcodeBase64","val","options","success","error","QRCode","toDataURL","Object","assign","margin","base64","debounceMakeQrcodeBase64","Qrcode","value","setValue","imgUrl","setImgUrl","href","window","location","autoFocus","onChange","target","rows","placeholder","handleCheck","handleUncheck","debounceStr2Code","hljs","highlightAuto","JSON","stringify","parse","str","replace","JSONView","setVal","errMsg","setErrMsg","html","setHTML","message","style","opacity","dangerouslySetInnerHTML","__html","System","userAgent","browser","setBrowser","navigator","LifeTime","date","currentYear","dayOfYear","currentDayOfYear","this","Date","getFullYear","isCommonYear","timesMap","getTime","toString","Math","ceil","year","LifeTiView","setDayOfYear","setCurrentDayOfYear","setCurrentYear","lifeTime","arr","i","push","renderTimeBlock","Transfer","list","checkedList","list2ByIdx","change","keyword","show","toLowerCase","indexOf","filter","idx","splice","getPosition","length","keyOfId","checkedListWithId","join","result","l","undefined","handleInputChange","TransferBox","props","languages","setLanguages","checkedLanguages","setCheckedLanguages","leftKeyword","setLeftKeyword","transfer","check","bind","uncheck","leftFilter","type","aria-hidden","language","index","id","data","socket","io","on","Status","Type","Sender","emitter","state","actions","createMessage","content","sender","status","Sending","userId","addMessage","Txt","Normal","emit","useMessages","messages","setMessage","Sent","RichText","isFocus","setIsFocus","textareaElement","useRef","handleOnElementChange","current","innerHTML","focus","MutationObserver","observe","childList","attributes","characterData","subtree","ref","onFocus","onBlur","onKeyDown","keyCode","onEnter","contentEditable","Control","MessageBox","messagesElement","element","scrollHeight","clientHeight","scrollTop","renderItem","ChatRoom","App","paddingTop","exact","path","component","Boolean","hostname","match","ReactDOM","render","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.68b5c82f.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Link, HashRouter as Router } from 'react-router-dom'\r\nimport './style.scss'\r\n\r\nconst Header: React.FC = () => {\r\n    const [isShow, setIsShow] = useState<boolean>(false)\r\n\r\n    useEffect(() => {\r\n        console.log(111)\r\n        document.body.onclick = function () {\r\n            setIsShow(false)\r\n        }\r\n    }, [])\r\n\r\n    const handleSwitchShowNavBar = (e: React.MouseEvent) => {\r\n        e.stopPropagation()\r\n        setIsShow(!isShow)\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <nav className=\"navbar has-shadow header\">\r\n                <div className=\"navbar-brand\">\r\n                    <Link to=\"/\" className=\"navbar-item\">\r\n                        <img src=\"/images/logo.png\" alt=\"logo\" />\r\n                    </Link>\r\n\r\n                    <div onClick={handleSwitchShowNavBar} className=\"navbar-burger\">\r\n                        <span />\r\n                        <span />\r\n                        <span />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={`navbar-menu ${isShow ? 'is-active' : ''}`}>\r\n                    <div className=\"navbar-start\">\r\n                        <Link to=\"/\" className=\"navbar-item\">首页</Link>\r\n                        <Link to=\"/qrcode\" className=\"navbar-item\">二维码生成</Link>\r\n                        <Link to=\"/json\" className=\"navbar-item\">JSON格式化</Link>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './style.scss'\r\n\r\nconst Home: React.FC = () => {\r\n    const apps = [\r\n        {\r\n            name: '二维码生成器',\r\n            des: '可以将文本(链接)转换为二维码，方便手机扫描获取',\r\n            image: '/images/qrcode.png',\r\n            url: '/qrcode'\r\n        },\r\n        {\r\n            name: 'JSON 格式化',\r\n            des: '将输入的 JSON字符串 美化展示',\r\n            image: '/images/json.png',\r\n            url: '/json'\r\n        },\r\n        {\r\n            name: '浏览器信息',\r\n            des: '浏览器信息&系统信息展示',\r\n            image: '/images/system.png',\r\n            url: '/system'\r\n        },\r\n        {\r\n            name: '人生时间',\r\n            des: '仿Github风格展示今年已经过去的时间',\r\n            image: '/images/time.png',\r\n            url: '/lifeTime'\r\n        },\r\n        {\r\n            name: '穿梭框',\r\n            des: '个人开发穿梭框组件，尝试与UI解耦',\r\n            image: '/images/transfer.png',\r\n            url: '/transfer'\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <div className=\"container home\">\r\n            <div className=\"columns\">\r\n                {\r\n                    apps.map(item => (\r\n                        <div className=\"column is-4\" key={item.url}>\r\n                            <div className=\"card\">\r\n                                <Link to={item.url}>\r\n                                    <div className=\"card-content\">\r\n                                        <div className=\"media\">\r\n                                            <div className=\"media-left\">\r\n                                                <figure className=\"image is-96x96\">\r\n                                                    <img src={item.image} alt=\"logo\" />\r\n                                                </figure>\r\n                                            </div>\r\n                                            <div className=\"media-content\">\r\n                                                <h3 className=\"title\">{item.name}</h3>\r\n                                                <p className=\"ellipsis-2\">{item.des}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","export function debounce (func: Function, ms: number = 300) {\r\n    let timer: NodeJS.Timeout\r\n    return function (...args: any[]) {\r\n        if (timer) {\r\n            clearTimeout(timer)\r\n        }\r\n        timer = setTimeout(() => {\r\n            return func.apply(null, args)\r\n        }, ms)\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport QRCode from 'qrcode'\r\nimport { debounce } from '../../utils'\r\nimport './style.scss'\r\n\r\nconst makeQrcodeBase64 = function (\r\n    val: string,\r\n    options: QRCode.QRCodeToDataURLOptions = {},\r\n    success: (qrcode: string) => void,\r\n    error?: (error: Error) => void\r\n) {\r\n    return QRCode.toDataURL(\r\n        val,\r\n        Object.assign({\r\n            margin: 0\r\n        }, options),\r\n        (e, base64) => {\r\n            if (error) {\r\n                error(e)\r\n            } else {\r\n                success(base64)\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\nconst debounceMakeQrcodeBase64 = debounce(makeQrcodeBase64)\r\n\r\nconst Qrcode: React.FC = () => {\r\n    const [value, setValue] = useState<string>('')\r\n    const [imgUrl, setImgUrl] = useState<string>('')\r\n\r\n    useEffect(() => {\r\n        const href = window.location.href\r\n        makeQrcodeBase64(href, {}, (base64) => {\r\n            setImgUrl(base64)\r\n        })\r\n    }, [])\r\n\r\n    function handleInputChange(e: React.ChangeEvent<HTMLTextAreaElement>) {\r\n        const val = e.target.value\r\n        setValue(val)\r\n        debounceMakeQrcodeBase64(val, {}, (base64: string) => {\r\n            setImgUrl(base64)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"title\">二维码生成</h1>\r\n            <p className=\"subtitle is-5\">将输入的 <strong>文字</strong> 或 <strong>链接</strong> 转换为二维码</p>\r\n            <div className=\"columns\">\r\n                <div className=\"control column is-half\">\r\n                    <textarea\r\n                        autoFocus\r\n                        className=\"textarea\"\r\n                        value={value}\r\n                        onChange={handleInputChange}\r\n                        rows={5}\r\n                        placeholder=\"请输入内容, 例如：http(s)://\"\r\n                    />\r\n                    <span className=\"icon is-small is-left\">\r\n                        <i className=\"fas fa-globe\"></i>\r\n                    </span>\r\n                </div>\r\n                <figure className=\"qrcode column is-half\">\r\n                    <img src={imgUrl} alt=\"qrcode\" />\r\n                </figure>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Qrcode","import React, { useState, useEffect } from 'react'\r\nimport { debounce } from '../../utils'\r\nimport hljs from 'highlight.js'\r\nimport 'highlight.js/styles/github.css'\r\nimport './style.scss'\r\n\r\nfunction removeQuotation(str: string) {\r\n    return str.replace(/(^\")|(\"$)/g, '')\r\n}\r\n\r\nconst debounceStr2Code = debounce((\r\n    val: string,\r\n    success: (html: string) => void,\r\n    error: (err: ErrorEvent) => void\r\n) => {\r\n    try {\r\n        const html: string = hljs.highlightAuto(JSON.stringify(JSON.parse(removeQuotation(val)), null, 4)).value\r\n        success(html)\r\n    } catch (e) {\r\n        error(e)\r\n    }\r\n})\r\n\r\nconst JSONView: React.FC = () => {\r\n    const [val, setVal] = useState<string>('')\r\n    const [errMsg, setErrMsg] = useState<string>('')\r\n    const [html, setHTML] = useState<string>('// TODO')\r\n\r\n    useEffect(() => {\r\n        console.log('useEffect')\r\n    }, [])\r\n\r\n    const handleInputChange = function (e: React.ChangeEvent<HTMLTextAreaElement>) {\r\n        const val = e.target.value\r\n        setVal(val)\r\n        debounceStr2Code(\r\n            val,\r\n            (html: string) => {\r\n                setHTML(html)\r\n                setErrMsg('')\r\n            },\r\n            (e: ErrorEvent) => {\r\n                setErrMsg(e.message)\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"title\">JSON 格式化</h1>\r\n            <p className=\"subtitle is-5\">将输入的 <strong>JSON字符串</strong> 美化展示</p>\r\n\r\n            <div className=\"columns\">\r\n                <div className=\"control column is-half\">\r\n                    <textarea\r\n                        autoFocus\r\n                        className=\"textarea\"\r\n                        value={val}\r\n                        onChange={handleInputChange}\r\n                        rows={10}\r\n                        placeholder=\"请输入JSON字符串\"\r\n                    />\r\n                    <p>{errMsg}</p>\r\n                </div>\r\n                <div className=\"column is-half\">\r\n                    <pre style={{ opacity: html ? 1 : 0 }} className=\"prview-code\"><code className=\"language-json\" dangerouslySetInnerHTML={{ __html: html }}></code></pre>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default JSONView","import React, { useEffect, useState } from 'react'\r\nimport Transfer, { ITransferListItem, ListItem } from './Transfer'\r\nimport './style.scss'\r\n\r\ninterface IProps {\r\n    list: ListItem[]\r\n    onChange?(checkList: ITransferListItem[]): void\r\n}\r\n\r\nlet handleCheck: (n: number) => void\r\nlet handleUncheck: (n: number) => void\r\nlet handleInputChange: (e: React.ChangeEvent<HTMLInputElement>) => void = () => {}\r\n\r\nconst TransferBox: React.FC<IProps> = (props) => {\r\n    const [languages, setLanguages] = useState<ITransferListItem[]>([])\r\n    const [checkedLanguages, setCheckedLanguages] = useState<ITransferListItem[]>([])\r\n    const [leftKeyword, setLeftKeyword] = useState<string>('')\r\n\r\n    useEffect(() => {\r\n        const transfer = new Transfer(props.list, [], {\r\n            change(list, checkedList) {\r\n                setLanguages(list)\r\n                setCheckedLanguages(checkedList)\r\n                props.onChange && props.onChange(checkedList)\r\n            }\r\n        })\r\n        handleCheck = transfer.check.bind(transfer)\r\n        handleUncheck = transfer.uncheck.bind(transfer)\r\n        handleInputChange = function (e) {\r\n            const val = e.target.value\r\n            transfer.leftFilter(val)\r\n            setLeftKeyword(val)\r\n        }\r\n    }, [props, props.list])\r\n\r\n    return (\r\n        <div className=\"columns\">\r\n            <div className=\"control column is-half\">\r\n                <article className=\"panel is-link\">\r\n                    <div className=\"panel-heading\">穿梭框</div>\r\n                    <div className=\"panel-block\">\r\n                        <p className=\"control has-icons-left\">\r\n                            <input onChange={handleInputChange} value={leftKeyword} className=\"input is-small\" type=\"text\" placeholder=\"Search\" />\r\n                            <span className=\"icon is-left\">\r\n                                <i className=\"fas fa-search\" aria-hidden=\"true\"/>\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                    {\r\n                        languages.map((language, index) => {\r\n                            return (\r\n                                <div key={index} onClick={() => handleCheck(index)} className={`panel-block ${language.show ? 'show' : 'hide'}`}>\r\n                                    {language.name}\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </article>\r\n            </div>\r\n            <div className=\"control column is-half\">\r\n                <article className=\"panel is-success is-small\">\r\n                    <div className=\"panel-heading\">选中的</div>\r\n                    <div className=\"panel-block\">\r\n                        <p className=\"control has-icons-left\">\r\n                            <input className=\"input is-small\" type=\"text\" placeholder=\"Search\" />\r\n                            <span className=\"icon is-left\">\r\n                                <i className=\"fas fa-search\" aria-hidden=\"true\"/>\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                    {\r\n                        checkedLanguages.map((language, index) => (\r\n                            <div key={language.id} onClick={() => handleUncheck(index)} className=\"panel-block\">\r\n                                {language.name}\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </article>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TransferBox\r\n","import React, { useState, useEffect } from 'react'\r\nimport { IBrowser } from '../../model/interface'\r\nimport './style.scss'\r\n\r\nconst System: React.FC = () => {\r\n    const [browser, setBrowser] = useState<IBrowser>({\r\n        userAgent: '',\r\n        href: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        const { navigator, location } = window\r\n        setBrowser({\r\n            userAgent: navigator.userAgent,\r\n            href: location.href\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"container system\">\r\n            <article className=\"panel is-primary\">\r\n                <p className=\"panel-heading\">浏览器信息</p>\r\n                <div className=\"\">\r\n                    <div className=\"columns is-mobile item\">\r\n                        <div className=\"column is-2 has-text-grey-dark has-text-right has-text-weight-medium\">\r\n                            userAgent\r\n                        </div>\r\n                        <div className=\"column is-10\">\r\n                            {browser.userAgent}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"columns is-mobile item\">\r\n                        <div className=\"column is-2 has-text-grey-dark has-text-right has-text-weight-medium\">\r\n                            href\r\n                        </div>\r\n                        <div className=\"column is-10\">\r\n                            {browser.href}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </article>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default System","class LifeTime {\r\n    private date: Date\r\n    readonly currentYear: number\r\n    readonly dayOfYear: number\r\n    readonly currentDayOfYear: number\r\n\r\n    constructor() {\r\n        this.date = new Date()\r\n        this.currentYear = this.date.getFullYear()\r\n        this.dayOfYear = LifeTime.isCommonYear(this.currentYear) ? 366 : 365\r\n        const timesMap = new Date().getTime() - new Date(this.currentYear.toString()).getTime()\r\n        this.currentDayOfYear = Math.ceil(timesMap / 86400000) + 1\r\n    }\r\n\r\n    static isCommonYear(year: number) {\r\n        return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0)\r\n    }\r\n}\r\n\r\n// factory\r\nexport default LifeTime\r\n","import React, { useState, useEffect } from 'react'\r\nimport LifeTime from './LifeTime'\r\nimport './style.scss'\r\n\r\nconst LifeTiView: React.FC = () => {\r\n    const [dayOfYear, setDayOfYear] = useState<number>(0)\r\n    const [currentDayOfYear, setCurrentDayOfYear] = useState<number>(0)\r\n    const [currentYear, setCurrentYear] = useState<number>(0)\r\n\r\n    useEffect(() => {\r\n        const lifeTime = new LifeTime()\r\n        setDayOfYear(lifeTime.dayOfYear)\r\n        setCurrentDayOfYear(lifeTime.currentDayOfYear)\r\n        setCurrentYear(lifeTime.currentYear)\r\n    }, [])\r\n\r\n    function renderTimeBlock() {\r\n        const arr = []\r\n        for (let i = 0; i < dayOfYear; i++) {\r\n            if (i < currentDayOfYear) {\r\n                arr.push(<div key={i} className=\"history\" />)\r\n            } else if (i === currentDayOfYear) {\r\n                arr.push(<div key={i} className=\"current\" />)\r\n            } else {\r\n                arr.push(<div key={i} />)\r\n            }\r\n        }\r\n        return arr\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <article className=\" life-time panel is-primary\">\r\n                <h3 className=\"title\">{currentYear}年共有{dayOfYear}天</h3>\r\n                <p className=\"subtitle\">已经过了<b>{currentDayOfYear}</b>天, 剩余<b>{dayOfYear - currentDayOfYear}</b>天</p>\r\n                <div className=\"align-center\">\r\n                    <div className=\"time-block flex\">\r\n                        {renderTimeBlock()}\r\n                    </div>\r\n                </div>\r\n            </article>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LifeTiView\r\n","export interface ListItem {\r\n    [key: string]: any\r\n}\r\n\r\nexport interface ITransferListItem extends ListItem {\r\n    idx: number\r\n    show: boolean\r\n}\r\n\r\nexport interface IOptions {\r\n    change(list: ITransferListItem[], checkedList: ITransferListItem[]): void\r\n\r\n    keyOfId?: string,\r\n    keyOfName?: string\r\n}\r\n\r\nclass Transfer {\r\n    list: ITransferListItem[]\r\n    checkedList: ITransferListItem[]\r\n    options: IOptions\r\n\r\n    constructor(\r\n        list: ListItem[],\r\n        checkedList: ITransferListItem[],\r\n        options: IOptions\r\n    ) {\r\n        this.options = options\r\n        this.list = Transfer.list2ByIdx(list)\r\n        this.checkedList = checkedList\r\n        this.options.change(this.list, this.checkedList)\r\n    }\r\n\r\n    get checkedListWithId() {\r\n        return this.checkedList.map(item => item[this.options.keyOfId || 'id'])\r\n    }\r\n\r\n    get checkedListWithIdOfString() {\r\n        return this.checkedListWithId.join(',')\r\n    }\r\n\r\n    static list2ByIdx(list: ListItem[]): ITransferListItem[] {\r\n        const result: ITransferListItem[] = []\r\n\r\n        for (let i = 0, l = list.length; i < l; i++) {\r\n            const item = list[i]\r\n            item.idx = i\r\n            item.show = true\r\n            result.push(item as ITransferListItem)\r\n        }\r\n        return result\r\n    }\r\n\r\n    filter(list: ITransferListItem[], keyword: string) {\r\n        return list.map(item => {\r\n            item.show = item.name.toLowerCase().indexOf(keyword.toLowerCase()) > -1\r\n            return item\r\n        })\r\n    }\r\n\r\n    leftFilter(keyword: string) {\r\n        const list = this.filter(this.list, keyword)\r\n        this.options.change(list, [...this.checkedList])\r\n    }\r\n\r\n    rightFilter(keyword: string) {\r\n        const checkedList = this.filter(this.checkedList, keyword)\r\n        this.options.change([...this.list], checkedList)\r\n    }\r\n\r\n    check(idx: number) {\r\n        const item = this.list[idx]\r\n        this.list.splice(idx, 1)\r\n        this.checkedList.push(item)\r\n        this.options.change([...this.list], [...this.checkedList])\r\n    }\r\n\r\n    uncheck(idx: number) {\r\n        const item = this.checkedList[idx]\r\n        this.checkedList.splice(idx, 1)\r\n        this.list.splice(this.getPosition(item.idx || 0), 0, item)\r\n        this.options.change([...this.list], [...this.checkedList])\r\n    }\r\n\r\n    static isExist<T>(value: T): boolean {\r\n        return value !== undefined && value !== null\r\n    }\r\n\r\n    getPosition(idx: number) {\r\n        if (idx === 0) return idx\r\n        const length = this.list.length\r\n        for (let i = 0; i < length; i++) {\r\n            const item = this.list[i]\r\n            if (item.idx && item.idx > idx) {\r\n                return i\r\n            }\r\n        }\r\n        return length\r\n    }\r\n}\r\n\r\nexport default Transfer\r\n","import React, { } from 'react'\r\nimport Transfer from '../../Components/Transfer'\r\nimport { ITransferListItem } from '../../Components/Transfer/Transfer'\r\n\r\nconst data = [\r\n    { id: 'a1', name: 'C' },\r\n    { id: 'a2', name: 'C++' },\r\n    { id: 'a3', name: 'C#' },\r\n    { id: 'a4', name: 'Java' },\r\n    { id: 'a6', name: 'JavaScript' },\r\n    { id: 'a7', name: 'Python' },\r\n    { id: 'a8', name: 'Lua' },\r\n]\r\n\r\nconst System: React.FC = () => {\r\n\r\n    function handleChange (list: ITransferListItem[]) {\r\n        console.log(list)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container shuttle-box\">\r\n            <div className=\"columns\">\r\n                <div className=\"control column is-half\">\r\n                    <Transfer list={data} onChange={handleChange} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default System","import io from 'socket.io-client'\r\n\r\nconst socket = io('http://localhost:3001')\r\n\r\nsocket.on('connect', () => {\r\n  console.log('成功链接', socket)\r\n})\r\n\r\nexport default socket\r\n","import React, { useEffect, useState } from 'react'\r\nimport socket from './initSocket'\r\n\r\nenum Status {\r\n    Sending,    // 发送中\r\n    Sent,       // 发送完成\r\n    Fail        // 发送失败\r\n}\r\n\r\nenum Type {\r\n    Txt,        // 文本消息\r\n    Image       // 图片消息\r\n}\r\n\r\nexport enum Sender {\r\n    Normal,     // 普通用户\r\n    System      // 系统消息\r\n}\r\n\r\nexport interface IMessage {\r\n    content: string\r\n    status: Status\r\n    id: string\r\n    userId: string\r\n    type: Type\r\n    sender: Sender\r\n}\r\n\r\nconst state: IMessage[] = []\r\nconst actions: React.Dispatch<React.SetStateAction<IMessage[]>>[] = []\r\nlet emitter: SocketIOClient.Emitter\r\n\r\nfunction createMessage(content: string, type: Type, sender: Sender, status: Status = Status.Sending): IMessage {\r\n    return {\r\n        content,\r\n        status,\r\n        id: '',\r\n        userId: socket.id,\r\n        type,\r\n        sender\r\n    }\r\n}\r\n\r\nfunction addMessage(content: string, type: Type = Type.Txt, sender: Sender = Sender.Normal) {\r\n    const message = createMessage(content, type, sender)\r\n    socket.emit('message', message)\r\n}\r\n\r\nexport default function useMessages(): [IMessage[], (message: string) => void] {\r\n    const [messages, setMessage] = useState<IMessage[]>(state)\r\n\r\n    useEffect(() => {\r\n        actions.push(setMessage)\r\n        if (emitter) return\r\n        emitter = socket.on('message', (message: IMessage) => {\r\n            message.status = Status.Sent\r\n            state.push(message)\r\n            setMessage([...state])\r\n        })\r\n    }, [])\r\n\r\n    return [messages, addMessage]\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react'\r\n\r\ninterface IProps {\r\n    onEnter: (value: string) => void\r\n}\r\n\r\nconst RichText: React.FC<IProps> = (props) => {\r\n    const [value, setValue] = useState('')\r\n    const [isFocus, setIsFocus] = useState(false)\r\n    const textareaElement = useRef<HTMLDivElement>(null)\r\n\r\n    useEffect(() => {\r\n        if (textareaElement.current) {\r\n            const mutationObserver = new MutationObserver(handleOnElementChange)\r\n            mutationObserver.observe(textareaElement.current, {\r\n                childList: true,\r\n                attributes: true,\r\n                characterData: true,\r\n                subtree: true\r\n            })\r\n        }\r\n\r\n    }, [textareaElement])\r\n\r\n    function handleOnElementChange() {\r\n        if (textareaElement.current) {\r\n            setValue(textareaElement.current.innerHTML)\r\n            textareaElement.current.focus()\r\n        }\r\n    }\r\n\r\n    function handleOnFocus() {\r\n        setIsFocus(true)\r\n    }\r\n\r\n    function handleOnBlur() {\r\n        setIsFocus(false)\r\n    }\r\n\r\n    function handleKeyDown(e: React.KeyboardEvent) {\r\n        if (isFocus && e.keyCode === 13){\r\n            props.onEnter(value)\r\n            setValue('')\r\n            setTimeout(() => {\r\n                textareaElement.current && (textareaElement.current.innerHTML = '')\r\n            }, 0)\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div\r\n            ref={textareaElement}\r\n            className=\"textarea\"\r\n            onFocus={handleOnFocus}\r\n            onBlur={handleOnBlur}\r\n            onKeyDown={handleKeyDown}\r\n            onChange={handleOnElementChange}\r\n            contentEditable={true}\r\n        />\r\n    )\r\n}\r\n\r\nexport default RichText","import React from 'react'\r\nimport useMessages from './useMessages'\r\nimport RichText from '../../Components/RichText'\r\nimport './style.scss'\r\n\r\nconst Control: React.FC = () => {\r\n    const [, addMessage] = useMessages()\r\n\r\n    function handleEnter(value: string) {\r\n        addMessage(value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"control\">\r\n            <RichText onEnter={handleEnter}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Control\r\n","import React, { useEffect, useRef } from 'react'\r\nimport useMessages, { IMessage } from './useMessages'\r\nimport socket from './initSocket'\r\n\r\nfunction toBottom(element: HTMLDivElement) {\r\n    if (element.scrollHeight > element.clientHeight) {\r\n        element.scrollTop = element.scrollHeight\r\n    }\r\n}\r\n\r\nfunction renderItem(message: IMessage) {\r\n    return [\r\n        (\r\n            <div className={`${socket.id === message.userId ? 'self' : ''}`} key={message.id}>\r\n                <span className=\"content\">{message.content}</span>\r\n            </div>\r\n        ),\r\n        (\r\n            <div className=\"system\" key={message.id}>\r\n                <span className=\"content\">{message.content}</span>\r\n            </div>\r\n        )\r\n    ][message.sender]\r\n}\r\n\r\nconst MessageBox: React.FC = () => {\r\n    const [messages] = useMessages()\r\n    const messagesElement = useRef<HTMLDivElement>(null)\r\n\r\n    useEffect(() => {\r\n        messagesElement.current && toBottom(messagesElement.current)\r\n    }, [messages])\r\n\r\n    return (\r\n        <div ref={messagesElement} className=\"messages\">\r\n            {\r\n                messages.map((message) => renderItem(message))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageBox\r\n","import React from 'react'\r\nimport Control from './Control'\r\nimport MessageBox from './MessageBox'\r\nimport './style.scss'\r\n\r\nconst ChatRoom: React.FC = () => {\r\n\r\n    return (\r\n        <div className=\"chat-room columns is-mobile\">\r\n            <div className=\"column is-half is-offset-one-quarter\">\r\n                <MessageBox />\r\n                <Control />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatRoom\r\n","import React from 'react'\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport Header from './Components/Header'\r\nimport Home from './Views/Home'\r\nimport Qrcode from './Views/Qrcode'\r\nimport JSONView from './Views/JSON'\r\nimport System from './Views/System'\r\nimport LifeTime from './Views/LifeTime'\r\nimport Transfer from './Views/Transfer'\r\nimport ChatRoom from './Views/ChatRoom'\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"section\" style={{paddingTop: '4.75rem'}}>\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route exact path=\"/qrcode\" component={Qrcode} />\r\n            <Route exact path=\"/json\" component={JSONView} />\r\n            <Route exact path=\"/system\" component={System} />\r\n            <Route exact path=\"/lifeTime\" component={LifeTime} />\r\n            <Route exact path=\"/transfer\" component={Transfer} />\r\n            <Route exact path=\"/chatRoom\" component={ChatRoom} />\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma'\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}